name: Clean up feature deployments.

on:
  pull_request:
    types:
      - closed
    branches:
      - 'develop'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

env:
  prefix:             chv-app
  cluster-name:       cluster-dev
  cluster-region:     us-central1-c
  k8s-namespace:      stg
  registry:           eu.gcr.io
  dev-port:           7000
  hostname-format:    pr-{0}.bytegum.com
  image-name:         chv-app-dev

jobs:
  config:
    name: 'Setup Variables'
    runs-on: ubuntu-latest
    outputs:
      hostname:       ${{ steps.resolved.outputs.hostname }}
      git-sha:        ${{ steps.resolved.outputs.git-sha }}
      docker-tag:     ${{ steps.resolved.outputs.docker-tag }}

    steps:
      - id: debug-context
        run: |
          echo "event_name      ${{ github.event_name }}"
          echo "ref_name        ${{ github.ref_name }}"
          echo "event.ref       ${{ github.event.ref }}"
          echo "event.ref_type  ${{ github.event.ref_type }}"

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6

      - name: Get commit sha
        id: commit
        uses: pr-mpt/actions-commit-hash@v2

      - name: Set Feature name
        id: set-hostname
        run: echo "feat-name=$(echo '${{ steps.branch-name.outputs.current_branch }}' | sed -e 's/\//-/g')" >> $GITHUB_ENV

      - name: Covert to lower case
        id: string-input
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ .env.feat-name }}

      - name: Set variables
        id: variables
        run: |
          echo "hostname=${{ format(env.hostname-format, steps.string-input.outputs.lowercase ) }}" >> $GITHUB_ENV
          echo "docker-tag=${{ steps.string-input.outputs.lowercase }}" >> $GITHUB_ENV
          echo "git-sha=${{ steps.commit.outputs.short }}" >> $GITHUB_ENV

      - name: Resolve outputs
        id: resolved
        run: |
          echo "git-sha=${{ env.git-sha }}" >> $GITHUB_OUTPUT
          echo "hostname=${{ env.hostname }}" >> $GITHUB_OUTPUT
          echo "docker-tag=${{ env.docker-tag }}" >> $GITHUB_OUTPUT
          echo "git-sha      ${{ env.git-sha }}"
          echo "hostname      ${{ env.hostname }}"
          echo "docker-tag      ${{ env.docker-tag }}"
          echo "event_name      ${{ github.event_name }}"

  clean-up:
    needs: config
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: -- For debugging --
        id: debug-context
        run: |
          echo "event_name      ${{ github.event_name }}"
          echo "docker-tag      ${{ needs.config.outputs.docker-tag }}"

      - uses: actions/checkout@v2
      - name: Authenticate to Google Cloud
        id: gcp-auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCLOUD_SERVICE_KEY }}

      - name: GCP kubernetes Credential Authentication
        id: kube-auth
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ .env.cluster-name }}
          location: ${{ .env.cluster-region }}

      - name: 'DELETE Deployment '
        id: remove-deployment
        env:
          IMAGE_TAG: ${{ needs.config.outputs.docker-tag }}
          NAMESPACE: ${{ .env.k8s-namespace }}
          APP_NAME: ${{ .env.prefix }}-${{ needs.config.outputs.docker-tag }}
          INGRESS_HOSTNAME: ${{ needs.config.outputs.hostname }}
          BASE_TAG: ${{ .env.registry }}/${{ secrets.GOOGLE_PROJECT_ID }}/${{ .env.image-name }}
          PORT: ${{ .env.dev-port }}
        run: |
          cat ./_kubernetes/deployment.yml | envsubst | kubectl delete -f - --ignore-not-found=true
          cat ./_kubernetes/service.yml | envsubst | kubectl delete -f - --ignore-not-found=true
          cat ./_kubernetes/ingress.yml | envsubst | kubectl delete -f - --ignore-not-found=true

      - name: DELETE Docker Image from ${{ .env.registry }}/${{ secrets.GOOGLE_PROJECT_ID }}/${{ .env.image-name }}
        id: remove-images
        run: |
          chmod +x ./_scripts/cleanup.sh
          ./_scripts/cleanup.sh ${{ env.registry }}/${{ secrets.GOOGLE_PROJECT_ID }}/${{ env.image-name }}
        shell: bash
