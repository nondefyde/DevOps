name: AZR TEST CLOUD

on:
  push:
    branches:
      - 'main'

permissions:
  id-token: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  project: cloudstmdev
  location: centralus
  envFileName: "cloud.tfvars"

jobs:
  envs:
    name: 'Set Environments'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Save Secret File secrets
        run: |
          echo "prefix=\"${{ env.project }}\"" >> cloud.tfvars
          echo "location=\"${{ env.location }}\"" >> cloud.tfvars
          echo "group=\"${{ env.project }}-group\"" >> cloud.tfvars
          cat ${{ env.envFileName }}
        shell: bash

      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: ${{ env.envFileName }}

      - name: Cache file
        uses: actions/cache@v2
        with:
          path: ${{ env.envFileName }}
          key: file-${{ runner.os }}-${{ github.run_id }}
          restore-keys: file-${{ runner.os }}-${{ github.run_id }}
          clean: true

  sa:
    name: 'SA'
    needs: [ envs ]
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Storage Account
        uses: ./.github/actions/create-azure-sa
        id: sa
        with:
          project: ${{ env.project }}
          location: ${{ env.location }}
          AZR_CLIENT_ID: ${{secrets.AZR_CLIENT_ID}}
          AZR_CLIENT_SECRET: ${{secrets.AZR_CLIENT_SECRET}}
          AZR_TENANT_ID: ${{secrets.AZR_TENANT_ID}}
        continue-on-error: false

  rg:
    name: 'RG'
    needs: [ sa ]
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Resource Group
        uses: ./.github/actions/tf-azure-script
        id: rg
        with:
          project: ${{ env.project }}
          envFile: ${{ env.envFileName }}
          key: ${{ env.project }}-rg
          working-directory: "tf/azure/crg"
          AZR_CLIENT_ID: ${{secrets.AZR_CLIENT_ID}}
          AZR_CLIENT_SECRET: ${{secrets.AZR_CLIENT_SECRET}}
          AZR_SUBSCRIPTION_ID: ${{secrets.AZR_SUBSCRIPTION_ID}}
          AZR_TENANT_ID: ${{secrets.AZR_TENANT_ID}}
          TFDestroy: ${{ inputs.TFDestroy == true }}
        continue-on-error: false

  vn:
    name: 'VN'
    needs: [ rg ]
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Virtual network
        uses: ./.github/actions/tf-azure-script
        id: vn
        with:
          project: ${{ env.project }}
          envFile: ${{ env.envFileName }}
          key: ${{ env.project }}-vn
          working-directory: "tf/azure/vn"
          AZR_CLIENT_ID: ${{secrets.AZR_CLIENT_ID}}
          AZR_CLIENT_SECRET: ${{secrets.AZR_CLIENT_SECRET}}
          AZR_SUBSCRIPTION_ID: ${{secrets.AZR_SUBSCRIPTION_ID}}
          AZR_TENANT_ID: ${{secrets.AZR_TENANT_ID}}
          TFDestroy: ${{ inputs.TFDestroy == true }}
        continue-on-error: false

      - name: Check Env
        id: envs
        run: |
          echo "Resource name $rg_name"
          echo "Resource location $rg_location"
          echo "Resource app_virtual_network_name $app_virtual_network_name"
          echo "Resource app_virtual_network_id $app_virtual_network_id"
          echo "Resource app_virtual_subnet_name $app_virtual_subnet_name"
          echo "Resource app_virtual_subnet_id $app_virtual_subnet_id"
          echo "Resource location $app_virtual_subnet_name"
  vms:
    name: 'VMs'
    needs: [ vn ]
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Virtual nachines
        id: vn
        run: echo "Generate virtual machines"

  prints:
    name: 'Print Outputs'
    needs: [ vms ]
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check Env
        id: envs
        run: |
          echo "Resource location ${{ env.rg_location }}"
          echo "Resource app_virtual_subnet_id ${{ env.app_virtual_subnet_id }}"