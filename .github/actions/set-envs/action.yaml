name: set-envs
author: Emmanuel Okafor
decription: A generic action to get app global based envs

inputs:
  configFile:
    description: 'Entry cofig file'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Check file existence
      id: check_files
      uses: andstor/file-existence-action@v1
      with:
        files: ${{ inputs.configFile }}

    - name: Cloud Config
      id: env-config
      uses: ActionsTools/read-json-action@main
      with:
        file_path: ${{ inputs.configFile }}

    - name: VM config
      id: vm-config
      uses: ActionsTools/read-json-action@main
      with:
        file_path: ${{ inputs.configFile }}
        prop_path: "virtual-machine"

    - name: VM config
      id: api-config
      uses: ActionsTools/read-json-action@main
      with:
        file_path: ${{ inputs.configFile }}
        prop_path: "api-management"

    - name:
      id: set-apis
      shell: bash
      run: |
        data=${{ toJson(steps.api-config.outputs.apis) }}
        names=$(echo $data | jq -r 'keys[]')
        names_array=($names)
        string_array=""
        for name in "${names_array[@]}"; do
          string_array+="'$name',"
        done
        string_array=${string_array%?}
        echo "api_names=$string_array" >> "$GITHUB_ENV"

    - name:
      id: set-vm
      shell: bash
      run: |
        data=${{ toJson(steps.vm-config.outputs.vms) }}
        names=$(echo $data | jq -r 'keys[]')
        names_array=($names)
        string_array=""
        for name in "${names_array[@]}"; do
          string_array+="'$name',"
        done
        string_array=${string_array%?}
        echo "vm_names=$string_array" >> "$GITHUB_ENV"